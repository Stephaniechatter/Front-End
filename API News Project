<--HTML-->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>News Api Project</title>
    <link rel="stylesheet" href="News API Project.css" />
  </head>
  <body>
    <!-- Navigation Bar -->
    <nav>
      <div class="navbar obj-width">
        <!-- Logo -->
        <a class="logo" href="index.html">News</a>

        <!-- Search Container -->
        <div class="search-container">
          <input
            type="text"
            placeholder="Search News Here.."
            id="search-input"
          />
          <button id="search-button">Search</button>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <main class="obj-width" id="blog-container">
      <!-- Example Blog Card -->
      <div class="blog-card">
        <img src="https://placehold.co/600x400" alt="" />
        <h2>This is a title</h2>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet
          soluta nihil consequatur vitae, iure pariatur? Fuga quisquam maxime
          animi laboriosam.
        </p>
      </div>
      <!-- Repeat Blog Cards for more articles -->
    </main>

    <!-- JavaScript File -->
    <script src="News API Project.js"></script>
  </body>
</html>



/* CSS */

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  position: relative;
}

/* Global CSS */
.obj-width {
  max-width: 1200px;
  margin: auto;
}

nav {
  background-color: #2d4c50;
  box-shadow: 0.7px 10px rgba(0, 0, 0, 0.3);
}

.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.3rem 0;
}

.navbar .logo {
  color: #fff;
  text-decoration: none;
  letter-spacing: 2px;
  font-size: 2.2rem;
}

#search-input {
  max-width: 400px;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  font-size: 18px;
  color: #333;
}

#search-button {
  padding: 10px 20px;
  background-color: #138065;
  color: #fff;
  border: none;
  font-size: 18px;
  cursor: pointer;
  border-radius: 5px;
  margin-left: 10px;
}

#blog-container {
  padding: 3rem 0;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-wrap: wrap;
}

.blog-card {
  width: 280px;
  border: 1px solid #2d4c50;
  border-radius: 10px;
  cursor: pointer;
  padding: 1rem;
  margin: 10px;
}

.blog-card:hover {
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.1);
}

.blog-card img {
  width: 100%;
  height: 280px;
  object-fit: cover;
  border-radius: 5px;
  margin-bottom: 1rem;
}

.blog-card h2 {
  color: #141414;
  font-size: 1.7rem;
  font-weight: 500W;
}

.blog-card p {
  font-size: 1.7rem;
  padding-top: 0.7rem;
}

@media (max-width: 500px) {
  nav {
    padding: 0 20px;
  }
  .navbar .logo {
    font-size: 1.8rem;
  }
  #search-input {
    width: 150px;
    padding: 10px 10px;
  }
  .blog-card {
    width: 100%;
  }
}


// JavaScript 
// I struggled the most with this section. I had to remove and readd the peramters for the API. I doubled checked console logs to debug anything that would prevent my code from running correctly. Overall, I am really happy how this turned out. 
// If I had to redo this project, I would try to use multiple topics, or create a nav bar that had multiple topics

const apikey = "pub_4493578b61886e4b42e1b4f0846c6530a821c";
const blogContainer = document.getElementById("blog-container");

async function fetchRandomNews(query = "omicron") {
  try {
    // Corrected URL and parameter structure
    const apiURL = `https://newsdata.io/api/1/news?apikey=${apikey}&q=${query}&language=en`;
    const response = await fetch(apiURL);

    // Log if the response is not OK
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();
    console.log(data);

    // Check if data has results
    if (data.results) {
      return data.results;
    } else {
      throw new Error("Unexpected API response structure");
    }
  } catch (error) {
    console.error("Error fetching random news", error);
    return [];
  }
}

function displayBlogs(articles) {
  blogContainer.innerHTML = "";
  articles.forEach((article) => {
    const blogCard = document.createElement("div");
    blogCard.classList.add("blog-card");

    const img = document.createElement("img");
    img.src =
      article.image_url || article.urlToImage || "https://placehold.co/600x400"; // Adjust property names based on API response
    img.alt = article.title;

    const title = document.createElement("h2");
    title.textContent = article.title;

    const description = document.createElement("p");
    description.textContent = article.description || article.summary || ""; // Adjust property names based on API response

    blogCard.appendChild(img);
    blogCard.appendChild(title);
    blogCard.appendChild(description);
    blogContainer.appendChild(blogCard);
  });
}

document.getElementById("search-button").addEventListener("click", async () => {
  const query = document.getElementById("search-input").value;
  const articles = await fetchRandomNews(query);
  displayBlogs(articles);
});

(async () => {
  const articles = await fetchRandomNews();
  displayBlogs(articles);
})();
